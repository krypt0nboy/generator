<?php

/**
 * The module's name.
 */
define('GENERATOR', 'generator');

/**
 * The module's path.
 */
define('GENERATOR_PATH', module_get_path('generator'));

/**
 * The module's cache table.
 */
define('GENERATOR_DB__CACHE', 'cache_generator');

module_load_include('inc', GENERATOR, 'generator.functions');
module_load_include('inc', GENERATOR, 'generator.cache');
module_load_include('inc', GENERATOR, 'generator.invoke');
module_load_include('inc', GENERATOR, 'generator.hooks');

/**
 * Defines PHZ__INIT.
 */
define('PHZ__INIT', 0x001);
/**
 * Defines PHZ__PREP.
 */
define('PHZ__PREP', 0x002);
/**
 * Defines PHZ__BUILD.
 */
define('PHZ__BUILD', 0x003);
/**
 * Defines PHZ__REBUILD.
 */
define('PHZ__REBUILD', 0x004);
/**
 * Defines PHZ__VED.
 */
define('PHZ__VED', 0x005);
/**
 * Defines PHZ__DELIVER.
 */
define('PHZ__DELIVER', 0x006);
/**
 * Defines BLD_STATUS__ERROR.
 */
define('BLD_STATUS__ERROR', 0X000);

/**
 * Implements hook_class_info().
 */
function generator_class_info() {
  $info              = array();
  $info['generator'] = array(
    'safe'           => '_GeneratorBase',
    'class_'         => '_GeneratorBase',
    'base'           => '_GeneratorBase',
    'model'          => array(
      'class' => '%args%Generator',
      'args'  => array(
        'generator_sys_id'
      )
    ),
    'factory'        => 'generator',
    'dependency dir' => 'generators',
  );
  $info['builder']   = array(
    'safe'           => 'BuilderBase',
    'class_'         => 'BuilderBase',
    'base'           => 'BuilderBase',
    'model'          => array(
      'class' => '%args%Builder',
      'args'  => array(
        'builder_sys_id'
      )
    ),
    'factory'        => 'builder',
    'dependency dir' => 'builders',
  );
  $info['model']     = array(
    'safe'           => 'ModelBase',
    'class_'         => 'ModelBase',
    'base'           => 'ModelBase',
    'model'          => array(
      'class' => '%args%Model',
      'args'  => array(
        'model_sys_id'
      )
    ),
    'factory'        => 'model',
    'dependency dir' => 'models',
  );
  $info['ki']        = array(
    'safe'           => 'KiBase',
    'class_'         => 'KiBase',
    'base'           => 'KiBase',
    'model'          => array(
      'class' => '%args%Ki',
      'args'  => array(
        'ki_sys_id'
      )
    ),
    'factory'        => 'ki',
    'dependency dir' => 'kis',
  );

  return $info;
}

/**
 * Implements hook_generator_info().
 */
function generator_generator_info() {
  $info                   = array();
  $info['generator_base'] = array();

  return $info;
}

/**
 * Implements hook_builder_info().
 */
function generator_builder_info() {
  $info                 = array();

  return $info;
}

/**
 * Implements hook_ki_info().
 */
function generator_ki_info() {
  $info              = array();
  $info['array']     = array();
  $info['non_array'] = array();
  $info['string']    = array(
    'class alter' => array(
      'dependency dir' => 'non_array_kis'
    ),
  );
  $info['boolean']   = array(
    'class alter' => array(
      'dependency dir' => 'non_array_kis'
    ),
  );
  $info['numeric']   = array(
    'class alter' => array(
      'dependency dir' => 'non_array_kis'
    ),
  );

  return $info;
}

/**
 * Implements hook_trait_info().
 */
function generator_trait_info() {
  $info                               = array();
  $info['build_dependent']            = array(
    'file' => array(
      'path' => paths_join(GENERATOR_PATH, array(
        'src',
        'traits',
        'dependencies'
      ))
    )
  );
  $info['builder_dependent']          = array(
    'file' => array(
      'path' => paths_join(GENERATOR_PATH, array(
        'src',
        'traits',
        'dependencies'
      ))
    )
  );
  $info['hook_dependent']             = array(
    'file' => array(
      'path' => paths_join(GENERATOR_PATH, array(
        'src',
        'traits',
        'dependencies'
      ))
    )
  );
  $info['ki_dependent']               = array(
    'file' => array(
      'path' => paths_join(GENERATOR_PATH, array(
        'src',
        'traits',
        'dependencies'
      ))
    )
  );
  $info['ki_properties_dependent']    = array(
    'file' => array(
      'path' => paths_join(GENERATOR_PATH, array(
        'src',
        'traits',
        'dependencies'
      ))
    )
  );
  $info['model_dependent']            = array(
    'file' => array(
      'path' => paths_join(GENERATOR_PATH, array(
        'src',
        'traits',
        'dependencies'
      ))
    )
  );
  $info['phase_dependent']            = array(
    'file' => array(
      'path' => paths_join(GENERATOR_PATH, array(
        'src',
        'traits',
        'dependencies'
      ))
    )
  );
  $info['static_structure_dependent'] = array(
    'file' => array(
      'path' => paths_join(GENERATOR_PATH, array(
        'src',
        'traits',
        'dependencies'
      ))
    )
  );
  $info['structure_dependent']        = array(
    'file' => array(
      'path' => paths_join(GENERATOR_PATH, array(
        'src',
        'traits',
        'dependencies'
      ))
    )
  );
  $info['build_help']                 = array(
    'file' => array(
      'path' => paths_join(GENERATOR_PATH, array(
        'src',
        'traits',
        'helpers'
      ))
    )
  );
  $info['data_help']                  = array(
    'file' => array(
      'path' => paths_join(GENERATOR_PATH, array(
        'src',
        'traits',
        'helpers'
      ))
    )
  );
  $info['deliver_help']               = array(
    'file' => array(
      'path' => paths_join(GENERATOR_PATH, array(
        'src',
        'traits',
        'helpers'
      ))
    )
  );
  $info['ki_help']                    = array(
    'file' => array(
      'path' => paths_join(GENERATOR_PATH, array(
        'src',
        'traits',
        'helpers'
      ))
    )
  );
  $info['model_help']                 = array(
    'file' => array(
      'path' => paths_join(GENERATOR_PATH, array(
        'src',
        'traits',
        'helpers'
      ))
    )
  );
  $info['structure_help']             = array(
    'file' => array(
      'path' => paths_join(GENERATOR_PATH, array(
        'src',
        'traits',
        'helpers'
      ))
    )
  );

  return $info;
}

/**
 * Implements hook_factory_info().
 */
function generator_factory_info() {
  $info              = array();
  $info['generator'] = array(
    'class' => 'GeneratorFactory',
    'file'  => array(
      'name' => 'GeneratorFactory',
      'dir'  => 'generators',
    ),
  );
  $info['builder']   = array(
    'class' => 'BuilderFactory',
    'file'  => array(
      'name' => 'BuilderFactory',
      'dir'  => 'builders',
    ),
  );
  $info['model']     = array(
    'class' => 'ModelFactory',
    'file'  => array(
      'name' => 'ModelFactory',
      'dir'  => 'models',
    ),
  );
  $info['ki']        = array(
    'class' => 'KiFactory',
    'file'  => array(
      'name' => 'KiFactory',
      'dir'  => 'kis',
    ),
  );

  return $info;
}